// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type KubernetesAuthInitParameters struct {

	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTTL *float64 `json:"accessTokenMaxTtl,omitempty" tf:"access_token_max_ttl,omitempty"`

	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *float64 `json:"accessTokenNumUsesLimit,omitempty" tf:"access_token_num_uses_limit,omitempty"`

	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTTL *float64 `json:"accessTokenTtl,omitempty" tf:"access_token_ttl,omitempty"`

	// An optional audience claim that the service account JWT token must have to authenticate with Infisical.
	AllowedAudience *string `json:"allowedAudience,omitempty" tf:"allowed_audience,omitempty"`

	// List of trusted namespaces that service accounts must belong to authenticate with Infisical.
	AllowedNamespaces []*string `json:"allowedNamespaces,omitempty" tf:"allowed_namespaces,omitempty"`

	// List of trusted service account names that are allowed to authenticate with Infisical.
	AllowedServiceAccountNames []*string `json:"allowedServiceAccountNames,omitempty" tf:"allowed_service_account_names,omitempty"`

	// The ID of the identity to attach the configuration onto.
	// +crossplane:generate:reference:type=github.com/infisical/provider-infisical/apis/identity/v1alpha1.Identity
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// Reference to a Identity in identity to populate identityId.
	// +kubebuilder:validation:Optional
	IdentityIDRef *v1.Reference `json:"identityIdRef,omitempty" tf:"-"`

	// Selector for a Identity in identity to populate identityId.
	// +kubebuilder:validation:Optional
	IdentityIDSelector *v1.Selector `json:"identityIdSelector,omitempty" tf:"-"`

	// The PEM-encoded CA cert for the Kubernetes API server. This is used by the TLS client for secure communication with the Kubernetes API server.
	KubernetesCACertificate *string `json:"kubernetesCaCertificate,omitempty" tf:"kubernetes_ca_certificate,omitempty"`

	// The host string, host:port pair, or URL to the base of the Kubernetes API server. This can usually be obtained by running `kubectl cluster-info`.
	KubernetesHost *string `json:"kubernetesHost,omitempty" tf:"kubernetes_host,omitempty"`

	// A long-lived service account JWT token for Infisical to access the [TokenReview API](https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/token-review-v1/) to validate other service account JWT tokens submitted by applications/pods. This is the JWT token obtained from step 1.5.
	TokenReviewerJwt *string `json:"tokenReviewerJwt,omitempty" tf:"token_reviewer_jwt,omitempty"`
}

type KubernetesAuthObservation struct {

	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTTL *float64 `json:"accessTokenMaxTtl,omitempty" tf:"access_token_max_ttl,omitempty"`

	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *float64 `json:"accessTokenNumUsesLimit,omitempty" tf:"access_token_num_uses_limit,omitempty"`

	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTTL *float64 `json:"accessTokenTtl,omitempty" tf:"access_token_ttl,omitempty"`

	// An optional audience claim that the service account JWT token must have to authenticate with Infisical.
	AllowedAudience *string `json:"allowedAudience,omitempty" tf:"allowed_audience,omitempty"`

	// List of trusted namespaces that service accounts must belong to authenticate with Infisical.
	AllowedNamespaces []*string `json:"allowedNamespaces,omitempty" tf:"allowed_namespaces,omitempty"`

	// List of trusted service account names that are allowed to authenticate with Infisical.
	AllowedServiceAccountNames []*string `json:"allowedServiceAccountNames,omitempty" tf:"allowed_service_account_names,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the identity to attach the configuration onto.
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// The PEM-encoded CA cert for the Kubernetes API server. This is used by the TLS client for secure communication with the Kubernetes API server.
	KubernetesCACertificate *string `json:"kubernetesCaCertificate,omitempty" tf:"kubernetes_ca_certificate,omitempty"`

	// The host string, host:port pair, or URL to the base of the Kubernetes API server. This can usually be obtained by running `kubectl cluster-info`.
	KubernetesHost *string `json:"kubernetesHost,omitempty" tf:"kubernetes_host,omitempty"`

	// A long-lived service account JWT token for Infisical to access the [TokenReview API](https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/token-review-v1/) to validate other service account JWT tokens submitted by applications/pods. This is the JWT token obtained from step 1.5.
	TokenReviewerJwt *string `json:"tokenReviewerJwt,omitempty" tf:"token_reviewer_jwt,omitempty"`
}

type KubernetesAuthParameters struct {

	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	// +kubebuilder:validation:Optional
	AccessTokenMaxTTL *float64 `json:"accessTokenMaxTtl,omitempty" tf:"access_token_max_ttl,omitempty"`

	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	// +kubebuilder:validation:Optional
	AccessTokenNumUsesLimit *float64 `json:"accessTokenNumUsesLimit,omitempty" tf:"access_token_num_uses_limit,omitempty"`

	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	// +kubebuilder:validation:Optional
	AccessTokenTTL *float64 `json:"accessTokenTtl,omitempty" tf:"access_token_ttl,omitempty"`

	// An optional audience claim that the service account JWT token must have to authenticate with Infisical.
	// +kubebuilder:validation:Optional
	AllowedAudience *string `json:"allowedAudience,omitempty" tf:"allowed_audience,omitempty"`

	// List of trusted namespaces that service accounts must belong to authenticate with Infisical.
	// +kubebuilder:validation:Optional
	AllowedNamespaces []*string `json:"allowedNamespaces,omitempty" tf:"allowed_namespaces,omitempty"`

	// List of trusted service account names that are allowed to authenticate with Infisical.
	// +kubebuilder:validation:Optional
	AllowedServiceAccountNames []*string `json:"allowedServiceAccountNames,omitempty" tf:"allowed_service_account_names,omitempty"`

	// The ID of the identity to attach the configuration onto.
	// +crossplane:generate:reference:type=github.com/infisical/provider-infisical/apis/identity/v1alpha1.Identity
	// +kubebuilder:validation:Optional
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// Reference to a Identity in identity to populate identityId.
	// +kubebuilder:validation:Optional
	IdentityIDRef *v1.Reference `json:"identityIdRef,omitempty" tf:"-"`

	// Selector for a Identity in identity to populate identityId.
	// +kubebuilder:validation:Optional
	IdentityIDSelector *v1.Selector `json:"identityIdSelector,omitempty" tf:"-"`

	// The PEM-encoded CA cert for the Kubernetes API server. This is used by the TLS client for secure communication with the Kubernetes API server.
	// +kubebuilder:validation:Optional
	KubernetesCACertificate *string `json:"kubernetesCaCertificate,omitempty" tf:"kubernetes_ca_certificate,omitempty"`

	// The host string, host:port pair, or URL to the base of the Kubernetes API server. This can usually be obtained by running `kubectl cluster-info`.
	// +kubebuilder:validation:Optional
	KubernetesHost *string `json:"kubernetesHost,omitempty" tf:"kubernetes_host,omitempty"`

	// A long-lived service account JWT token for Infisical to access the [TokenReview API](https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/token-review-v1/) to validate other service account JWT tokens submitted by applications/pods. This is the JWT token obtained from step 1.5.
	// +kubebuilder:validation:Optional
	TokenReviewerJwt *string `json:"tokenReviewerJwt,omitempty" tf:"token_reviewer_jwt,omitempty"`
}

// KubernetesAuthSpec defines the desired state of KubernetesAuth
type KubernetesAuthSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KubernetesAuthParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider KubernetesAuthInitParameters `json:"initProvider,omitempty"`
}

// KubernetesAuthStatus defines the observed state of KubernetesAuth.
type KubernetesAuthStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KubernetesAuthObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// KubernetesAuth is the Schema for the KubernetesAuths API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,infisical}
type KubernetesAuth struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.kubernetesHost) || (has(self.initProvider) && has(self.initProvider.kubernetesHost))",message="spec.forProvider.kubernetesHost is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tokenReviewerJwt) || (has(self.initProvider) && has(self.initProvider.tokenReviewerJwt))",message="spec.forProvider.tokenReviewerJwt is a required parameter"
	Spec   KubernetesAuthSpec   `json:"spec"`
	Status KubernetesAuthStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KubernetesAuthList contains a list of KubernetesAuths
type KubernetesAuthList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KubernetesAuth `json:"items"`
}

// Repository type metadata.
var (
	KubernetesAuth_Kind             = "KubernetesAuth"
	KubernetesAuth_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: KubernetesAuth_Kind}.String()
	KubernetesAuth_KindAPIVersion   = KubernetesAuth_Kind + "." + CRDGroupVersion.String()
	KubernetesAuth_GroupVersionKind = CRDGroupVersion.WithKind(KubernetesAuth_Kind)
)

func init() {
	SchemeBuilder.Register(&KubernetesAuth{}, &KubernetesAuthList{})
}
